{"version":3,"sources":["Components/Hero/Hero.jsx","Components/Home/Home.jsx","Components/StationPicker/StationPicker.jsx","Components/Ride/Ride.jsx","Components/Trains/Trains.jsx","Components/Station/Station.jsx","Components/Nav/Nav.jsx","Components/ReviewForm/ReviewForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Hero","className","style","backgroundImage","Home","StationPicker","props","DropdownButton","id","title","allStations","map","eachStation","i","Dropdown","Item","href","StationID","key","Station","Ride","Trains","generateTrains","north","south","northTrains","train","data","Record","trainStyles","LineID","TrainID","carPrint","cars","southTrains","carsArray","car","allTrainKeys","Object","keys","trains","forEach","startsWith","push","generateTrainList","state","ready","station","northTrain1","name","northTrain2","northTrain3","southTrain1","southTrain2","southTrain3","updateStation","a","Axios","get","result","setState","RecordSet","updateTrains","names","update","loadCars","Cars","split","printTrains","this","StationName","Component","Nav","menuOpen","isOpen","toggleBlue","to","color","onStateChange","handleStateChange","closeMenu","onClick","ReviewForm","handleSubmit","e","preventDefault","console","log","entry","reviewData","rating","put","_id","review","post","then","res","catch","err","handleChange","field","target","value","Form","Group","controlId","Label","Control","type","placeholder","onChange","Text","as","defaultValue","hidden","Button","variant","App","showBlue","axios","stationArray","pageWrapId","outerContainerId","right","noOverlay","exact","path","render","match","params","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.6978a633.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Hero.css\";\n\nexport default function Hero() {\n  return (\n    <div className=\"hero-container\">\n      <div className=\"hero-text-area\">\n        <p className=\"hero-text\">\n          There are many factors in life that are uncontrollable\n        </p>\n        <p className=\"hero-text\">\n          The quality of your train car does not have to be one of them.\n        </p>\n        <p className=\"hero-text\">\n          Be a part of our community and learn to choose wisely on your next\n          ride.\n        </p>\n        <h2 className=\"hero-subtitle\">Welcome to </h2>\n        <h1 className=\"hero-title\">WinningTransit</h1>\n      </div>\n      <div\n        className=\"hero-background-img\"\n        style={{ backgroundImage: 'url(\"./img/brickellSouthboundTrain1.png\")' }}\n      ></div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Hero from \"../Hero/Hero\";\nexport default function Home() {\n  return (\n    <div>\n      <Hero />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\n\nimport \"./StationPicker.css\";\nexport default function StationPicker(props) {\n  let printStations = () => {\n    return props.allStations.map((eachStation, i) => {\n      return (\n        <Dropdown.Item href={`#/ride/${eachStation.StationID}`} key={i}>\n          {eachStation.Station}\n        </Dropdown.Item>\n      );\n    });\n  };\n\n  let buildDropdown = () => {\n    return (\n      // <div className={\"blueButton \" + (props.showBlue ? \"front\" : \"\")}>\n      <DropdownButton id=\"dropdown-basic-button\" title=\"Choose Your Station\">\n        {printStations()}\n      </DropdownButton>\n      // </div>\n    );\n  };\n  return <div>{buildDropdown()}</div>;\n}\n","import React from \"react\";\n\nimport \"./Ride.css\";\n\nimport StationPicker from \"../StationPicker/StationPicker\";\n\nexport default function Ride(props) {\n  return (\n    <div className=\"ride-page-content\">\n      <StationPicker {...props} allStations={props.allStations} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./Trains.css\";\n\nexport default function Trains(props) {\n  let generateTrainList = () => {\n    let allTrainKeys = Object.keys(props.trains);\n    let northTrains = [];\n    let southTrains = [];\n\n    allTrainKeys.forEach(train => {\n      if (train.startsWith(\"north\") === true) {\n        northTrains.push(props.trains[train]);\n      }\n      if (train.startsWith(\"south\") === true) {\n        southTrains.push(props.trains[train]);\n      }\n    });\n    return generateTrains(northTrains, southTrains);\n  };\n\n  let generateTrains = (north, south) => {\n    let northTrains = north.map((train, i) => {\n      if (train.data.Record != null) {\n        let line = train.data.Record.LineID;\n        let trainStyles = \"train \" + line;\n        // console.log(props.station); This is a reminder to go in and figure out how to get the time of the trains layered in.\n        return (\n          <div key={i}>\n            <h4 className={trainStyles}>{train.data.Record.TrainID}</h4>\n            <div className=\"cars\">{carPrint(train.cars)}</div>\n          </div>\n        );\n      } else {\n        return (\n          <h4 key={i} className=\"train\">\n            Data unavailable\n          </h4>\n        );\n      }\n    });\n    let southTrains = south.map((train, i) => {\n      if (train.data.Record != null) {\n        let line = train.data.Record.LineID;\n        let trainStyles = \"train \" + line;\n\n        return (\n          <div key={i}>\n            <h4 className={trainStyles}>{train.data.Record.TrainID}</h4>\n            <div className=\"cars\">{carPrint(train.cars)}</div>\n          </div>\n        );\n      } else {\n        return (\n          <h4 key={i} className=\"train\">\n            Data unavailable\n          </h4>\n        );\n      }\n    });\n    let allTrains = (\n      <div className=\"trains-container\">\n        <div className=\"north-bound-container\">\n          <h3>North</h3>\n          <div className=\"train-container\">{northTrains}</div>\n        </div>\n        <div className=\"south-bound-container\">\n          <h3>South</h3>\n          <div className=\"train-container\">{southTrains}</div>\n        </div>\n      </div>\n    );\n    return allTrains;\n  };\n  let carPrint = carsArray => {\n    if (typeof carsArray === \"object\" && carsArray !== null) {\n      let cars = carsArray.map((car, i) => {\n        return (\n          <div key={i}>\n            <p className=\"car\">{car}</p>\n          </div>\n        );\n      });\n      return cars;\n    }\n  };\n  return <div>{generateTrainList()}</div>;\n}\n","import React, { Component } from \"react\";\n\nimport Ride from \"../Ride/Ride\";\nimport Trains from \"../Trains/Trains\";\nimport Axios from \"axios\";\n\nimport \"./Station.css\";\n\nexport default class Station extends Component {\n  state = {\n    ready: false,\n    station: {},\n    trains: {\n      northTrain1: {\n        name: \"NB_Time1_Train\",\n        data: {},\n        cars: []\n      },\n      northTrain2: {\n        name: \"NB_Time2_Train\",\n        data: {},\n        cars: []\n      },\n      northTrain3: {\n        name: \"NB_Time3_Train\",\n        data: {},\n        cars: []\n      },\n      southTrain1: {\n        name: \"SB_Time1_Train\",\n        data: {},\n        cars: []\n      },\n      southTrain2: {\n        name: \"SB_Time2_Train\",\n        data: {},\n        cars: []\n      },\n      southTrain3: { name: \"SB_Time3_Train\", data: {}, cars: [] }\n    }\n  };\n  componentDidMount() {\n    this.updateStation();\n  }\n\n  updateStation = async () => {\n    let result = await Axios.get(\n      `https://miami-transit-api.herokuapp.com/api/TrainTracker.json?StationID=${this.props.StationID}`\n    );\n    this.setState(\n      { station: result.data.RecordSet.Record, ready: false },\n      () => {\n        this.updateTrains();\n      }\n    );\n  };\n\n  updateTrains = () => {\n    let names = this.state.trains;\n\n    Object.keys(names).map(async train => {\n      let update = await Axios.get(\n        `https://miami-transit-api.herokuapp.com/api/Trains.json?TrainID=${\n          this.state.station[names[train].name]\n        }`\n      );\n\n      if (this.state.station[names[train].name] === \"SCH\") {\n        update.data.RecordSet = \"Data currently not available for this train.\";\n      }\n\n      names[train] = {\n        ...names[train],\n        data: update.data.RecordSet\n      };\n\n      this.setState({ trains: names }, () => this.loadCars(train));\n    });\n  };\n\n  loadCars = train => {\n    let cars;\n    let trains = this.state.trains;\n\n    if (trains[train].data !== \"Data currently not available for this train.\") {\n      cars = trains[train].data.Record.Cars.split(\"-\");\n    } else {\n      cars = \"Car data unavailable.\";\n    }\n\n    trains[train].cars = cars;\n\n    this.setState({ trains: trains, ready: true });\n  };\n\n  printTrains = () => {\n    if (this.state.ready === true) {\n      return <Trains {...this.state} />;\n    }\n  };\n\n  render() {\n    if (this.props.StationID !== this.state.station.StationID) {\n      this.updateStation();\n      // this.generateTrainList();\n    }\n\n    return (\n      <div>\n        <Ride {...this.props} allStations={this.props.allStations} />\n        <h1>Welcome to {this.state.station.StationName} Station</h1>\n        {this.printTrains()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { slide as Menu } from \"react-burger-menu\";\n// Styling\nimport \"./Nav.css\";\n\nexport default class Nav extends Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleStateChange(state) {\n    this.setState({ menuOpen: state.isOpen });\n\n    this.props.toggleBlue();\n  }\n\n  closeMenu() {\n    this.setState({ menuOpen: false });\n    this.props.toggleBlue();\n  }\n\n  render() {\n    return (\n      <div className=\"nav-container\">\n        <Link to=\"/\" style={{ color: \"#42be08\" }}>\n          <i className=\"fas fa-subway fa-3x\"></i>\n        </Link>\n        <Menu\n          {...this.props}\n          isOpen={this.state.menuOpen}\n          onStateChange={state => this.handleStateChange(state)}\n          closeMenu={this.closeMenu}\n        >\n          <Link className=\"menu-item\" to=\"/\" onClick={() => this.closeMenu()}>\n            Home\n          </Link>\n          <Link\n            to=\"/ride\"\n            className=\"menu-item\"\n            onClick={() => this.closeMenu()}\n          >\n            Ride\n          </Link>\n          <Link\n            to=\"/rate\"\n            className=\"menu-item\"\n            onClick={() => this.closeMenu()}\n          >\n            Contribute\n          </Link>\n          <Link to=\"\" className=\"menu-item\" onClick={() => this.closeMenu()}>\n            Feedback\n          </Link>\n        </Menu>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport \"./ReviewForm.css\";\n\nexport default class ReviewForm extends Component {\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    console.log(this.state);\n\n    // Check if car reviews exist\n    let entry = await Axios.get(\n      `https://ironrest.herokuapp.com/findOne/winningTransit?car=${this.state.car}`\n    );\n\n    console.log(entry);\n\n    // If car exists, add review to the existing entry\n    if (entry.data !== null) {\n      console.log(\"There be data here\");\n      console.log(entry.data);\n      let reviewData = { rating: [...entry.data.rating, this.state.rating] };\n      Axios.put(\n        `https://ironrest.herokuapp.com/winningTransit/${entry.data._id}`,\n        reviewData\n      );\n    }\n\n    // If car does not exist, create a new entry\n    if (entry.data === null) {\n      console.log(\"Doesn't exist\");\n      let reviewData = { car: this.state.car, rating: [this.state.review] };\n      Axios.post(\"https://ironrest.herokuapp.com/winningTransit\", this.state)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    }\n  };\n\n  handleChange = e => {\n    let field = { [e.target.name]: e.target.value };\n    // Axios.delete(\n    //   \"https://ironrest.herokuapp.com/winningTransit/5dddaada8be4700017b22000\"\n    // );\n    console.log(field);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  render() {\n    return (\n      <Form className=\"form\">\n        <Form.Group controlId=\"formCarNumber\">\n          <Form.Label>Car #</Form.Label>\n          <Form.Control\n            name=\"car\"\n            type=\"number\"\n            placeholder=\"#\"\n            onChange={this.handleChange}\n          />\n          <Form.Text className=\"text-muted\">\n            This can be found by the door.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formRating\">\n          <Form.Label>Rating</Form.Label>\n          <Form.Control\n            name=\"rating\"\n            as=\"select\"\n            placeholder=\"Choose\"\n            onChange={this.handleChange}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            <option value=\"1\">1 - Don't do it.</option>\n            <option value=\"2\">\n              2 - Could be worse, but could be a whole lot better.\n            </option>\n            <option value=\"3\">3 - Legit.</option>\n            <option value=\"4\">4 - Can't go wrong with this ride.</option>\n            <option value=\"5\">5 - A/C is great, no leaks, strong Wi-Fi.</option>\n          </Form.Control>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n          Submit\n        </Button>\n      </Form>\n    );\n  }\n}\n","import React from \"react\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// Components\nimport Home from \"./Components/Home/Home\";\nimport Ride from \"./Components/Ride/Ride\";\nimport Station from \"./Components/Station/Station\";\nimport Nav from \"./Components/Nav/Nav\";\nimport ReviewForm from \"./Components/ReviewForm/ReviewForm\";\n// Styling\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    allStations: [],\n    showBlue: false\n  };\n\n  componentDidMount() {\n    // Get Station Data\n    axios\n      .get(`https://miami-transit-api.herokuapp.com/api/TrainStations.json`)\n      .then(res => {\n        let stationData = res.data.RecordSet.Record;\n\n        let stationArray = stationData.map(eachStation => {\n          let id = eachStation.StationID;\n          let stationName = eachStation.Station;\n          return { StationID: id, Station: stationName };\n        });\n\n        this.setState({ allStations: stationArray });\n      });\n  }\n  toggleBlue = () => {\n    this.setState({\n      showBlue: !this.state.showBlue\n    });\n  };\n  render() {\n    return (\n      <div id=\"App\">\n        <Nav\n          pageWrapId={\"page-wrap\"}\n          outerContainerId={\"App\"}\n          right\n          noOverlay\n          toggleBlue={this.toggleBlue}\n        />\n        <div id=\"page-wrap\">\n          <Switch>\n            <Route exact path=\"/\" render={props => <Home {...props} />} />\n            <Route\n              exact\n              path=\"/ride\"\n              render={props => (\n                <Ride\n                  {...props}\n                  showBlue={this.state.showBlue}\n                  allStations={this.state.allStations}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/ride/:StationID\"\n              render={props => (\n                <Station\n                  {...props}\n                  allStations={this.state.allStations}\n                  StationID={props.match.params.StationID}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/rate\"\n              render={props => (\n                <ReviewForm {...props} allStations={this.state.allStations} />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Create the collection\n// axios\n//   .post(\"https://ironrest.herokuapp.com/createCollection/winningTransit\")\n//   .then(res => {\n//     console.log(res.data);\n//   });\n\n// Post to the collection\n// axios\n//   .post(\"https://ironrest.herokuapp.com/winningTransit\", {\n//     testing: \"Winning\"\n//   })\n//   .then(res => {\n//     console.log(res.data);\n//   });\n\n// Delete an item from the collection.\n// axios\n//   .delete(\n//     \"https://ironrest.herokuapp.com/winningTransit/5dd43f3e7b55290017a2b1aa\"\n//   )\n//   .then(res => {\n//     console.log(res.data);\n//   });\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\n// Components\nimport App from \"./App\";\n\n// Styling\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\n// Services\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}